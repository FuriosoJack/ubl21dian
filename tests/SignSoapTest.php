<?php

namespace Stenfrank\Tests;

use DOMDocument;
use Stenfrank\UBL21dian\BinarySecurityToken\SOAP;
use Stenfrank\UBL21dian\HTTP\DOM\Request\SendTestSetAsyncRequestDOM;

/**
 * Sign soap test.
 */
class SignSoapTest extends TestCase
{


    private $domGetStatusRequest;

    protected function setUp()/* The :void return type declaration that should be here would cause a BC issue */
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->domGetStatusRequest = new DOMDocument();
        $this->domGetStatusRequest->load(__DIR__."/resources/requests/request_getStatus.xml");
    }


    /**
     * @return mixed
     */
    public function getStringRequestGetStatus()
    {
        return $this->domGetStatusRequest->saveXML();
    }

    /** @test */
    public function it_generates_signature_soap_with_string()
    {

        $soap21 = new SOAP($this->pathCert, $this->passwordCert, $this->getStringRequestGetStatus());

        $domDocumentValidate = new DOMDocument();
        $domDocumentValidate->validateOnParse = true;

        $this->assertSame(true, $domDocumentValidate->loadXML($soap21->xml));
    }

    /** @test */
    public function it_generates_signature_soap_with_instance_of_dom_document()
    {

        $soap21 = new SOAP($this->pathCert, $this->passwordCert);
        $soap21->Action = 'http://wcf.dian.colombia/IWcfDianCustomerServices/GetStatus';
        $soap21->To = 'https://vpfe-hab.dian.gov.co/WcfDianCustomerServices.svc';
        $soap21->CurrentTime = time();
        $soap21->TimeToLive = 60000;

        $soap21->sign($this->getStringRequestGetStatus());

        $domDocumentValidate = new DOMDocument();
        $domDocumentValidate->validateOnParse = true;

        $this->assertSame(true, $domDocumentValidate->loadXML($soap21->xml));
    }



}
